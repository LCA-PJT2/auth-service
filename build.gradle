plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.backend'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	// Web + Validation
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Security + JWT
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation libs.jjwtApi
	runtimeOnly libs.jjwtImpl
	runtimeOnly libs.jjwtJackson

	// JPA + MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly libs.mysqlConnectorJ

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// AWS SDK for S3
	implementation libs.awsJavaSdkS3
	implementation libs.springCloudAwsStarter

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Actuator + Feign + Config Client
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly  'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// build.gradle 맨 아래쯤에 추가
tasks.register('getAppName') {
	doLast {
		// rootProject.name 은 settings.gradle 에 정의된 프로젝트 이름입니다.
		println rootProject.name
	}
}

tasks.register('getAppVersion') {
	doLast {
		// project.version 은 build.gradle 상단의 version 속성
		println project.version
	}
}